/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, BigNumberish, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { GasTrap, GasTrapInterface } from "../../GasTrap.sol/GasTrap.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_loopCeil",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "_armed",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "bool",
        "name": "armed",
        "type": "bool"
      }
    ],
    "name": "ArmedSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "loops",
        "type": "uint256"
      }
    ],
    "name": "LoopCeilSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "to",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "caller",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "loops",
        "type": "uint256"
      }
    ],
    "name": "Trapped",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "bool",
        "name": "allowed",
        "type": "bool"
      }
    ],
    "name": "WhitelistSet",
    "type": "event"
  },
  {
    "stateMutability": "payable",
    "type": "fallback"
  },
  {
    "inputs": [],
    "name": "armed",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes",
        "name": "",
        "type": "bytes"
      }
    ],
    "name": "enter",
    "outputs": [
      {
        "internalType": "bool",
        "name": "ok",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "loopCeil",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bool",
        "name": "_armed",
        "type": "bool"
      }
    ],
    "name": "setArmed",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_loopCeil",
        "type": "uint256"
      }
    ],
    "name": "setLoopCeil",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "internalType": "bool",
        "name": "allowed",
        "type": "bool"
      }
    ],
    "name": "setWhitelist",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "whitelist",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "stateMutability": "payable",
    "type": "receive"
  }
] as const;

  const _bytecode = "0x608060405234801561000f575f5ffd5b5060405161122d38038061122d833981810160405281019061003191906101ae565b5f821180156100435750624c4b408211155b610082576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007990610246565b60405180910390fd5b335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600181905550805f60146101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050610264565b5f5ffd5b5f819050919050565b61015881610146565b8114610162575f5ffd5b50565b5f815190506101738161014f565b92915050565b5f8115159050919050565b61018d81610179565b8114610197575f5ffd5b50565b5f815190506101a881610184565b92915050565b5f5f604083850312156101c4576101c3610142565b5b5f6101d185828601610165565b92505060206101e28582860161019a565b9150509250929050565b5f82825260208201905092915050565b7f626164206c6f6f70206365696c000000000000000000000000000000000000005f82015250565b5f610230600d836101ec565b915061023b826101fc565b602082019050919050565b5f6020820190508181035f83015261025d81610224565b9050919050565b610fbc806102715f395ff3fe608060405260043610610089575f3560e01c80639b19251a116100585780639b19251a14610288578063a5ff06c7146102c4578063bd3e9a27146102ec578063d4734f4a14610316578063f2fde38b1461035257610139565b80630a6907fe146101e45780632f4110931461020c57806353d6fd59146102365780638da5cb5b1461025e57610139565b36610139575f60149054906101000a900460ff1615806100ef575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b1561012f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012690610a4b565b60405180910390fd5b61013761037a565b005b5f60149054906101000a900460ff16158061019a575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b156101da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d190610ab3565b60405180910390fd5b6101e261037a565b005b3480156101ef575f5ffd5b5061020a60048036038101906102059190610b0c565b610429565b005b348015610217575f5ffd5b50610220610549565b60405161022d9190610b51565b60405180910390f35b348015610241575f5ffd5b5061025c60048036038101906102579190610bee565b61055b565b005b348015610269575f5ffd5b5061027261068f565b60405161027f9190610c3b565b60405180910390f35b348015610293575f5ffd5b506102ae60048036038101906102a99190610c54565b6106b3565b6040516102bb9190610b51565b60405180910390f35b3480156102cf575f5ffd5b506102ea60048036038101906102e59190610c7f565b6106d0565b005b3480156102f7575f5ffd5b506103006107b1565b60405161030d9190610cb9565b60405180910390f35b348015610321575f5ffd5b5061033c60048036038101906103379190610d33565b6107b7565b6040516103499190610b51565b60405180910390f35b34801561035d575f5ffd5b5061037860048036038101906103739190610c54565b610839565b005b5f5f90505f5f90505b622dc6c08110156103a05780820191508080600101915050610383565b505f811415806103af57505f81145b6103ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e590610dc8565b60405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042090610e30565b60405180910390fd5b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ae90610e98565b60405180910390fd5b5f811180156104c95750624c4b408111155b610508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ff90610f00565b60405180910390fd5b806001819055507f3591101738232e2e50f3acb2bd95216930c95cac320e4fd1fb915f1f4f69dff18160405161053e9190610cb9565b60405180910390a150565b5f60149054906101000a900460ff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e090610e98565b60405180910390fd5b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f0aa5ec5ffdc7f6f9c4d0dded489d7450297155cb2f71cb771e02427f7dff4f51826040516106839190610b51565b60405180910390a25050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052805f5260405f205f915054906101000a900460ff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590610e98565b60405180910390fd5b805f60146101000a81548160ff0219169083151502179055507f244aff177546aea9aab73410cdfd140032116ac52a30bf49be237b09aab08668816040516107a69190610b51565b60405180910390a150565b60015481565b5f5f60149054906101000a900460ff161580610819575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b156108275760019050610833565b61082f61037a565b5f90505b92915050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be90610e98565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90610f68565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff165f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f82825260208201905092915050565b7f6e6f2064697265637420455448000000000000000000000000000000000000005f82015250565b5f610a35600d836109f1565b9150610a4082610a01565b602082019050919050565b5f6020820190508181035f830152610a6281610a29565b9050919050565b7f6e6f2d6f700000000000000000000000000000000000000000000000000000005f82015250565b5f610a9d6005836109f1565b9150610aa882610a69565b602082019050919050565b5f6020820190508181035f830152610aca81610a91565b9050919050565b5f5ffd5b5f5ffd5b5f819050919050565b610aeb81610ad9565b8114610af5575f5ffd5b50565b5f81359050610b0681610ae2565b92915050565b5f60208284031215610b2157610b20610ad1565b5b5f610b2e84828501610af8565b91505092915050565b5f8115159050919050565b610b4b81610b37565b82525050565b5f602082019050610b645f830184610b42565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b9382610b6a565b9050919050565b610ba381610b89565b8114610bad575f5ffd5b50565b5f81359050610bbe81610b9a565b92915050565b610bcd81610b37565b8114610bd7575f5ffd5b50565b5f81359050610be881610bc4565b92915050565b5f5f60408385031215610c0457610c03610ad1565b5b5f610c1185828601610bb0565b9250506020610c2285828601610bda565b9150509250929050565b610c3581610b89565b82525050565b5f602082019050610c4e5f830184610c2c565b92915050565b5f60208284031215610c6957610c68610ad1565b5b5f610c7684828501610bb0565b91505092915050565b5f60208284031215610c9457610c93610ad1565b5b5f610ca184828501610bda565b91505092915050565b610cb381610ad9565b82525050565b5f602082019050610ccc5f830184610caa565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610cf357610cf2610cd2565b5b8235905067ffffffffffffffff811115610d1057610d0f610cd6565b5b602083019150836001820283011115610d2c57610d2b610cda565b5b9250929050565b5f5f60208385031215610d4957610d48610ad1565b5b5f83013567ffffffffffffffff811115610d6657610d65610ad5565b5b610d7285828601610cde565b92509250509250929050565b7f74726170000000000000000000000000000000000000000000000000000000005f82015250565b5f610db26004836109f1565b9150610dbd82610d7e565b602082019050919050565b5f6020820190508181035f830152610ddf81610da6565b9050919050565b7f74726170706564000000000000000000000000000000000000000000000000005f82015250565b5f610e1a6007836109f1565b9150610e2582610de6565b602082019050919050565b5f6020820190508181035f830152610e4781610e0e565b9050919050565b7f6e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f610e826009836109f1565b9150610e8d82610e4e565b602082019050919050565b5f6020820190508181035f830152610eaf81610e76565b9050919050565b7f626164206c6f6f70206365696c000000000000000000000000000000000000005f82015250565b5f610eea600d836109f1565b9150610ef582610eb6565b602082019050919050565b5f6020820190508181035f830152610f1781610ede565b9050919050565b7f7a65726f206164647200000000000000000000000000000000000000000000005f82015250565b5f610f526009836109f1565b9150610f5d82610f1e565b602082019050919050565b5f6020820190508181035f830152610f7f81610f46565b905091905056fea26469706673582212207f75b62187fe4addbd5ca9fd6aa56597f83829a6d77dd3eff0b27b89923eccdf64736f6c634300081c0033";

  
      type GasTrapConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: GasTrapConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class GasTrap__factory extends ContractFactory {
    
      constructor(...args: GasTrapConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_loopCeil: BigNumberish, _armed: boolean, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_loopCeil, _armed, overrides || {});
    };
    override deploy(_loopCeil: BigNumberish, _armed: boolean, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_loopCeil, _armed, overrides || {}) as Promise<GasTrap & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): GasTrap__factory {
      return super.connect(runner) as GasTrap__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): GasTrapInterface {
      return new Interface(_abi) as GasTrapInterface;
    }
    
    override attach(address: string | Addressable): GasTrap {
      return super.attach(address) as GasTrap;
    }
  static connect(address: string, runner?: ContractRunner | null): GasTrap {
      return new Contract(address, _abi, runner) as unknown as GasTrap;
    }
  }

  
  